class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        # hash table method
        '''
        Thinking:
        use hash table to reduce time complexity from O(n) (enumeration method) to O(1)
        for ensure that each number not match itself, we should insert the number in hash table after judge

        Coding:
        1. create a hash table
        2. if find the solution, return it
        3. insert the number to the hash table
        4. if no solution, return empty
        '''
        hashtable = dict()
        for i, num in enumerate(nums):
            if target - num in hashtable:
                return [hashtable[target - num], i]
            hashtable[nums[i]] = i
        return []

        '''
        Complexity analysis:
        time: O(1)
        space: O(n)
        '''
